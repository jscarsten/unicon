procedure printnode(n)
	write("node type: " || type(n))
	write("node label: " || n.label)
end

procedure caseexpr(root)
	write("\n------------------------------------")
	write("current frame :\n")

	node := root

	if /node then {write("node type: null") ; fail}

	case type(node) of{
		# internal node
		"treenode" : {
			if node.label == "Case" then {
				write("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&")
				write("CASE EXPRESSION FOUND")
				every casechild := !node.children do {
					if type(casechild) == "treenode" & casechild.label == "cclause1" then
						write(casechild.children[1].s)
				}
				write("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&")
			}
			printnode(node)
			every child := !node.children do caseexpr(child)
			
		}

		# leaf node
		"integer" : write("integer")
		"string" : write("string")
		"token" : write("token")

	}

end

